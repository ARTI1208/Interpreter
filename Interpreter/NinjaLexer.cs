//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ..\..\..\Interpreter\Ninja.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public partial class NinjaLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		RETURN_KEYWORD=1, MAIN=2, FUN_KEYWORD=3, MEANINGFUL_TYPE=4, VOID=5, COMMA=6, 
		OBRACE=7, CBRACE=8, OBRACKET=9, CBRACKET=10, WS=11, COMMENT=12, BOOL=13, 
		DOUBLE=14, INT=15, WORD=16, STRING=17, BUILTIN_FUNC=18, CALL=19, CUSTOM_CALL=20;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"RETURN_KEYWORD", "MAIN", "FUN_KEYWORD", "MEANINGFUL_TYPE", "VOID", "COMMA", 
		"OBRACE", "CBRACE", "OBRACKET", "CBRACKET", "WS", "COMMENT", "BOOL", "DOUBLE", 
		"INT", "DIGIT", "WORD", "STRING", "BUILTIN_FUNC", "CALL", "CUSTOM_CALL"
	};


	public NinjaLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public NinjaLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'return'", "'main'", "'fun'", null, "'void'", "','", "'{'", "'}'", 
		"'('", "')'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "RETURN_KEYWORD", "MAIN", "FUN_KEYWORD", "MEANINGFUL_TYPE", "VOID", 
		"COMMA", "OBRACE", "CBRACE", "OBRACKET", "CBRACKET", "WS", "COMMENT", 
		"BOOL", "DOUBLE", "INT", "WORD", "STRING", "BUILTIN_FUNC", "CALL", "CUSTOM_CALL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Ninja.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static NinjaLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x16', '\xC7', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x5', '\x5', 'K', '\n', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', 
		'\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', 
		'\v', '\x3', '\v', '\x3', '\f', '\x6', '\f', ']', '\n', '\f', '\r', '\f', 
		'\xE', '\f', '^', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', 
		'\x3', '\r', '\x3', '\r', '\a', '\r', 'g', '\n', '\r', '\f', '\r', '\xE', 
		'\r', 'j', '\v', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', 
		'\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', 
		'\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x5', '\xE', 
		'y', '\n', '\xE', '\x3', '\xF', '\x5', '\xF', '|', '\n', '\xF', '\x3', 
		'\xF', '\a', '\xF', '\x7F', '\n', '\xF', '\f', '\xF', '\xE', '\xF', '\x82', 
		'\v', '\xF', '\x3', '\xF', '\x3', '\xF', '\x6', '\xF', '\x86', '\n', '\xF', 
		'\r', '\xF', '\xE', '\xF', '\x87', '\x3', '\x10', '\x5', '\x10', '\x8B', 
		'\n', '\x10', '\x3', '\x10', '\x6', '\x10', '\x8E', '\n', '\x10', '\r', 
		'\x10', '\xE', '\x10', '\x8F', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', 
		'\x6', '\x12', '\x95', '\n', '\x12', '\r', '\x12', '\xE', '\x12', '\x96', 
		'\x3', '\x13', '\x3', '\x13', '\a', '\x13', '\x9B', '\n', '\x13', '\f', 
		'\x13', '\xE', '\x13', '\x9E', '\v', '\x13', '\x3', '\x13', '\x3', '\x13', 
		'\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', 
		'\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', 
		'\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', 
		'\x3', '\x14', '\x5', '\x14', '\xB2', '\n', '\x14', '\x3', '\x15', '\x3', 
		'\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x5', 
		'\x15', '\xBA', '\n', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x16', 
		'\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', 
		'\x5', '\x16', '\xC4', '\n', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', 
		'h', '\x2', '\x17', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', 
		'\v', '\a', '\r', '\b', '\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', 
		'\f', '\x17', '\r', '\x19', '\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', 
		'\x11', '!', '\x2', '#', '\x12', '%', '\x13', '\'', '\x14', ')', '\x15', 
		'+', '\x16', '\x3', '\x2', '\b', '\x5', '\x2', '\v', '\f', '\xF', '\xF', 
		'\"', '\"', '\x3', '\x2', '\f', '\f', '\x4', '\x2', '-', '-', '/', '/', 
		'\x3', '\x2', '\x30', '\x30', '\x3', '\x2', '\x32', ';', '\x4', '\x2', 
		'\x43', '\\', '\x63', '|', '\x2', '\xDA', '\x2', '\x3', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\xF', '\x3', '\x2', '\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x19', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', 
		')', '\x3', '\x2', '\x2', '\x2', '\x2', '+', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '-', '\x3', '\x2', '\x2', '\x2', '\x5', '\x34', '\x3', '\x2', '\x2', 
		'\x2', '\a', '\x39', '\x3', '\x2', '\x2', '\x2', '\t', 'J', '\x3', '\x2', 
		'\x2', '\x2', '\v', 'L', '\x3', '\x2', '\x2', '\x2', '\r', 'Q', '\x3', 
		'\x2', '\x2', '\x2', '\xF', 'S', '\x3', '\x2', '\x2', '\x2', '\x11', 'U', 
		'\x3', '\x2', '\x2', '\x2', '\x13', 'W', '\x3', '\x2', '\x2', '\x2', '\x15', 
		'Y', '\x3', '\x2', '\x2', '\x2', '\x17', '\\', '\x3', '\x2', '\x2', '\x2', 
		'\x19', '\x62', '\x3', '\x2', '\x2', '\x2', '\x1B', 'x', '\x3', '\x2', 
		'\x2', '\x2', '\x1D', '{', '\x3', '\x2', '\x2', '\x2', '\x1F', '\x8A', 
		'\x3', '\x2', '\x2', '\x2', '!', '\x91', '\x3', '\x2', '\x2', '\x2', '#', 
		'\x94', '\x3', '\x2', '\x2', '\x2', '%', '\x98', '\x3', '\x2', '\x2', 
		'\x2', '\'', '\xB1', '\x3', '\x2', '\x2', '\x2', ')', '\xB3', '\x3', '\x2', 
		'\x2', '\x2', '+', '\xBD', '\x3', '\x2', '\x2', '\x2', '-', '.', '\a', 
		't', '\x2', '\x2', '.', '/', '\a', 'g', '\x2', '\x2', '/', '\x30', '\a', 
		'v', '\x2', '\x2', '\x30', '\x31', '\a', 'w', '\x2', '\x2', '\x31', '\x32', 
		'\a', 't', '\x2', '\x2', '\x32', '\x33', '\a', 'p', '\x2', '\x2', '\x33', 
		'\x4', '\x3', '\x2', '\x2', '\x2', '\x34', '\x35', '\a', 'o', '\x2', '\x2', 
		'\x35', '\x36', '\a', '\x63', '\x2', '\x2', '\x36', '\x37', '\a', 'k', 
		'\x2', '\x2', '\x37', '\x38', '\a', 'p', '\x2', '\x2', '\x38', '\x6', 
		'\x3', '\x2', '\x2', '\x2', '\x39', ':', '\a', 'h', '\x2', '\x2', ':', 
		';', '\a', 'w', '\x2', '\x2', ';', '<', '\a', 'p', '\x2', '\x2', '<', 
		'\b', '\x3', '\x2', '\x2', '\x2', '=', '>', '\a', 'k', '\x2', '\x2', '>', 
		'?', '\a', 'p', '\x2', '\x2', '?', 'K', '\a', 'v', '\x2', '\x2', '@', 
		'\x41', '\a', '\x66', '\x2', '\x2', '\x41', '\x42', '\a', 'q', '\x2', 
		'\x2', '\x42', '\x43', '\a', 'w', '\x2', '\x2', '\x43', '\x44', '\a', 
		'\x64', '\x2', '\x2', '\x44', '\x45', '\a', 'n', '\x2', '\x2', '\x45', 
		'K', '\a', 'g', '\x2', '\x2', '\x46', 'G', '\a', '\x64', '\x2', '\x2', 
		'G', 'H', '\a', 'q', '\x2', '\x2', 'H', 'I', '\a', 'q', '\x2', '\x2', 
		'I', 'K', '\a', 'n', '\x2', '\x2', 'J', '=', '\x3', '\x2', '\x2', '\x2', 
		'J', '@', '\x3', '\x2', '\x2', '\x2', 'J', '\x46', '\x3', '\x2', '\x2', 
		'\x2', 'K', '\n', '\x3', '\x2', '\x2', '\x2', 'L', 'M', '\a', 'x', '\x2', 
		'\x2', 'M', 'N', '\a', 'q', '\x2', '\x2', 'N', 'O', '\a', 'k', '\x2', 
		'\x2', 'O', 'P', '\a', '\x66', '\x2', '\x2', 'P', '\f', '\x3', '\x2', 
		'\x2', '\x2', 'Q', 'R', '\a', '.', '\x2', '\x2', 'R', '\xE', '\x3', '\x2', 
		'\x2', '\x2', 'S', 'T', '\a', '}', '\x2', '\x2', 'T', '\x10', '\x3', '\x2', 
		'\x2', '\x2', 'U', 'V', '\a', '\x7F', '\x2', '\x2', 'V', '\x12', '\x3', 
		'\x2', '\x2', '\x2', 'W', 'X', '\a', '*', '\x2', '\x2', 'X', '\x14', '\x3', 
		'\x2', '\x2', '\x2', 'Y', 'Z', '\a', '+', '\x2', '\x2', 'Z', '\x16', '\x3', 
		'\x2', '\x2', '\x2', '[', ']', '\t', '\x2', '\x2', '\x2', '\\', '[', '\x3', 
		'\x2', '\x2', '\x2', ']', '^', '\x3', '\x2', '\x2', '\x2', '^', '\\', 
		'\x3', '\x2', '\x2', '\x2', '^', '_', '\x3', '\x2', '\x2', '\x2', '_', 
		'`', '\x3', '\x2', '\x2', '\x2', '`', '\x61', '\b', '\f', '\x2', '\x2', 
		'\x61', '\x18', '\x3', '\x2', '\x2', '\x2', '\x62', '\x63', '\a', '\x31', 
		'\x2', '\x2', '\x63', '\x64', '\a', '\x31', '\x2', '\x2', '\x64', 'h', 
		'\x3', '\x2', '\x2', '\x2', '\x65', 'g', '\v', '\x2', '\x2', '\x2', '\x66', 
		'\x65', '\x3', '\x2', '\x2', '\x2', 'g', 'j', '\x3', '\x2', '\x2', '\x2', 
		'h', 'i', '\x3', '\x2', '\x2', '\x2', 'h', '\x66', '\x3', '\x2', '\x2', 
		'\x2', 'i', 'k', '\x3', '\x2', '\x2', '\x2', 'j', 'h', '\x3', '\x2', '\x2', 
		'\x2', 'k', 'l', '\t', '\x3', '\x2', '\x2', 'l', 'm', '\x3', '\x2', '\x2', 
		'\x2', 'm', 'n', '\b', '\r', '\x2', '\x2', 'n', '\x1A', '\x3', '\x2', 
		'\x2', '\x2', 'o', 'p', '\a', 'v', '\x2', '\x2', 'p', 'q', '\a', 't', 
		'\x2', '\x2', 'q', 'r', '\a', 'w', '\x2', '\x2', 'r', 'y', '\a', 'g', 
		'\x2', '\x2', 's', 't', '\a', 'h', '\x2', '\x2', 't', 'u', '\a', '\x63', 
		'\x2', '\x2', 'u', 'v', '\a', 'n', '\x2', '\x2', 'v', 'w', '\a', 'u', 
		'\x2', '\x2', 'w', 'y', '\a', 'g', '\x2', '\x2', 'x', 'o', '\x3', '\x2', 
		'\x2', '\x2', 'x', 's', '\x3', '\x2', '\x2', '\x2', 'y', '\x1C', '\x3', 
		'\x2', '\x2', '\x2', 'z', '|', '\t', '\x4', '\x2', '\x2', '{', 'z', '\x3', 
		'\x2', '\x2', '\x2', '{', '|', '\x3', '\x2', '\x2', '\x2', '|', '\x80', 
		'\x3', '\x2', '\x2', '\x2', '}', '\x7F', '\x5', '!', '\x11', '\x2', '~', 
		'}', '\x3', '\x2', '\x2', '\x2', '\x7F', '\x82', '\x3', '\x2', '\x2', 
		'\x2', '\x80', '~', '\x3', '\x2', '\x2', '\x2', '\x80', '\x81', '\x3', 
		'\x2', '\x2', '\x2', '\x81', '\x83', '\x3', '\x2', '\x2', '\x2', '\x82', 
		'\x80', '\x3', '\x2', '\x2', '\x2', '\x83', '\x85', '\t', '\x5', '\x2', 
		'\x2', '\x84', '\x86', '\x5', '!', '\x11', '\x2', '\x85', '\x84', '\x3', 
		'\x2', '\x2', '\x2', '\x86', '\x87', '\x3', '\x2', '\x2', '\x2', '\x87', 
		'\x85', '\x3', '\x2', '\x2', '\x2', '\x87', '\x88', '\x3', '\x2', '\x2', 
		'\x2', '\x88', '\x1E', '\x3', '\x2', '\x2', '\x2', '\x89', '\x8B', '\t', 
		'\x4', '\x2', '\x2', '\x8A', '\x89', '\x3', '\x2', '\x2', '\x2', '\x8A', 
		'\x8B', '\x3', '\x2', '\x2', '\x2', '\x8B', '\x8D', '\x3', '\x2', '\x2', 
		'\x2', '\x8C', '\x8E', '\x5', '!', '\x11', '\x2', '\x8D', '\x8C', '\x3', 
		'\x2', '\x2', '\x2', '\x8E', '\x8F', '\x3', '\x2', '\x2', '\x2', '\x8F', 
		'\x8D', '\x3', '\x2', '\x2', '\x2', '\x8F', '\x90', '\x3', '\x2', '\x2', 
		'\x2', '\x90', ' ', '\x3', '\x2', '\x2', '\x2', '\x91', '\x92', '\t', 
		'\x6', '\x2', '\x2', '\x92', '\"', '\x3', '\x2', '\x2', '\x2', '\x93', 
		'\x95', '\t', '\a', '\x2', '\x2', '\x94', '\x93', '\x3', '\x2', '\x2', 
		'\x2', '\x95', '\x96', '\x3', '\x2', '\x2', '\x2', '\x96', '\x94', '\x3', 
		'\x2', '\x2', '\x2', '\x96', '\x97', '\x3', '\x2', '\x2', '\x2', '\x97', 
		'$', '\x3', '\x2', '\x2', '\x2', '\x98', '\x9C', '\a', '$', '\x2', '\x2', 
		'\x99', '\x9B', '\t', '\a', '\x2', '\x2', '\x9A', '\x99', '\x3', '\x2', 
		'\x2', '\x2', '\x9B', '\x9E', '\x3', '\x2', '\x2', '\x2', '\x9C', '\x9A', 
		'\x3', '\x2', '\x2', '\x2', '\x9C', '\x9D', '\x3', '\x2', '\x2', '\x2', 
		'\x9D', '\x9F', '\x3', '\x2', '\x2', '\x2', '\x9E', '\x9C', '\x3', '\x2', 
		'\x2', '\x2', '\x9F', '\xA0', '\a', '$', '\x2', '\x2', '\xA0', '&', '\x3', 
		'\x2', '\x2', '\x2', '\xA1', '\xA2', '\a', 'j', '\x2', '\x2', '\xA2', 
		'\xA3', '\a', 'k', '\x2', '\x2', '\xA3', '\xB2', '\a', 'v', '\x2', '\x2', 
		'\xA4', '\xA5', '\a', 'o', '\x2', '\x2', '\xA5', '\xA6', '\a', 'q', '\x2', 
		'\x2', '\xA6', '\xA7', '\a', 'x', '\x2', '\x2', '\xA7', '\xB2', '\a', 
		'g', '\x2', '\x2', '\xA8', '\xA9', '\a', 'v', '\x2', '\x2', '\xA9', '\xAA', 
		'\a', 'w', '\x2', '\x2', '\xAA', '\xAB', '\a', 't', '\x2', '\x2', '\xAB', 
		'\xB2', '\a', 'p', '\x2', '\x2', '\xAC', '\xAD', '\a', 'u', '\x2', '\x2', 
		'\xAD', '\xAE', '\a', 'j', '\x2', '\x2', '\xAE', '\xAF', '\a', 'q', '\x2', 
		'\x2', '\xAF', '\xB0', '\a', 'q', '\x2', '\x2', '\xB0', '\xB2', '\a', 
		'v', '\x2', '\x2', '\xB1', '\xA1', '\x3', '\x2', '\x2', '\x2', '\xB1', 
		'\xA4', '\x3', '\x2', '\x2', '\x2', '\xB1', '\xA8', '\x3', '\x2', '\x2', 
		'\x2', '\xB1', '\xAC', '\x3', '\x2', '\x2', '\x2', '\xB2', '(', '\x3', 
		'\x2', '\x2', '\x2', '\xB3', '\xB4', '\x5', '\'', '\x14', '\x2', '\xB4', 
		'\xB9', '\x5', '\x13', '\n', '\x2', '\xB5', '\xBA', '\x5', '\x1F', '\x10', 
		'\x2', '\xB6', '\xBA', '\x5', '\x1D', '\xF', '\x2', '\xB7', '\xBA', '\x5', 
		'\x1B', '\xE', '\x2', '\xB8', '\xBA', '\x5', '#', '\x12', '\x2', '\xB9', 
		'\xB5', '\x3', '\x2', '\x2', '\x2', '\xB9', '\xB6', '\x3', '\x2', '\x2', 
		'\x2', '\xB9', '\xB7', '\x3', '\x2', '\x2', '\x2', '\xB9', '\xB8', '\x3', 
		'\x2', '\x2', '\x2', '\xBA', '\xBB', '\x3', '\x2', '\x2', '\x2', '\xBB', 
		'\xBC', '\x5', '\x15', '\v', '\x2', '\xBC', '*', '\x3', '\x2', '\x2', 
		'\x2', '\xBD', '\xBE', '\x5', '#', '\x12', '\x2', '\xBE', '\xC3', '\x5', 
		'\x13', '\n', '\x2', '\xBF', '\xC4', '\x5', '\x1F', '\x10', '\x2', '\xC0', 
		'\xC4', '\x5', '\x1D', '\xF', '\x2', '\xC1', '\xC4', '\x5', '\x1B', '\xE', 
		'\x2', '\xC2', '\xC4', '\x5', '#', '\x12', '\x2', '\xC3', '\xBF', '\x3', 
		'\x2', '\x2', '\x2', '\xC3', '\xC0', '\x3', '\x2', '\x2', '\x2', '\xC3', 
		'\xC1', '\x3', '\x2', '\x2', '\x2', '\xC3', '\xC2', '\x3', '\x2', '\x2', 
		'\x2', '\xC4', '\xC5', '\x3', '\x2', '\x2', '\x2', '\xC5', '\xC6', '\x5', 
		'\x15', '\v', '\x2', '\xC6', ',', '\x3', '\x2', '\x2', '\x2', '\x11', 
		'\x2', 'J', '^', 'h', 'x', '{', '\x80', '\x87', '\x8A', '\x8F', '\x96', 
		'\x9C', '\xB1', '\xB9', '\xC3', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
